<?xml version="1.0" encoding="UTF-8" ?>
<testsuite failures="0" time="0.217" errors="1" skipped="0" tests="4" name="edu.ualberta.cs.papersdb.server.dao.hibernate.TestAuthor">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/jdk1.6.0_32/jre/lib/amd64"/>
    <property name="java.vm.version" value="20.7-b02"/>
    <property name="java.vm.vendor" value="Sun Microsystems Inc."/>
    <property name="java.vendor.url" value="http://java.sun.com/"/>
    <property name="path.separator" value=":"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="CA"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/nelson/proj/aicml/workspace/papersdb"/>
    <property name="java.runtime.version" value="1.6.0_32-b05"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/jdk1.6.0_32/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Sun Microsystems Inc."/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven2/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/lib/jvm/jdk1.6.0_32/jre/lib/amd64/server:/usr/lib/jvm/jdk1.6.0_32/jre/lib/amd64:/usr/lib/jvm/jdk1.6.0_32/jre/../lib/amd64::/usr/local/lib:/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="50.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="3.2.0-27-generic"/>
    <property name="user.home" value="/home/nelson"/>
    <property name="user.timezone" value="America/Edmonton"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="1.6"/>
    <property name="user.name" value="nelson"/>
    <property name="java.class.path" value="/usr/share/maven2/boot/classworlds.jar"/>
    <property name="java.vm.specification.version" value="1.0"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/jdk1.6.0_32/jre"/>
    <property name="sun.java.command" value="org.codehaus.classworlds.Launcher &quot;install&quot;"/>
    <property name="java.specification.vendor" value="Sun Microsystems Inc."/>
    <property name="user.language" value="en"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.6.0_32"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/jdk1.6.0_32/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/jdk1.6.0_32/jre/lib/resources.jar:/usr/lib/jvm/jdk1.6.0_32/jre/lib/rt.jar:/usr/lib/jvm/jdk1.6.0_32/jre/lib/sunrsasign.jar:/usr/lib/jvm/jdk1.6.0_32/jre/lib/jsse.jar:/usr/lib/jvm/jdk1.6.0_32/jre/lib/jce.jar:/usr/lib/jvm/jdk1.6.0_32/jre/lib/charsets.jar:/usr/lib/jvm/jdk1.6.0_32/jre/lib/modules/jdk.boot.jar:/usr/lib/jvm/jdk1.6.0_32/jre/classes"/>
    <property name="java.vendor" value="Sun Microsystems Inc."/>
    <property name="maven.home" value="/usr/share/maven2"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://java.sun.com/cgi-bin/bugreport.cgi"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase time="0.072" classname="edu.ualberta.cs.papersdb.server.dao.hibernate.TestAuthor" name="create"/>
  <testcase time="0.043" classname="edu.ualberta.cs.papersdb.server.dao.hibernate.TestAuthor" name="getByFamilyNames">
    <error type="java.util.NoSuchElementException">java.util.NoSuchElementException
	at java.util.HashMap$HashIterator.nextEntry(HashMap.java:796)
	at java.util.HashMap$KeyIterator.next(HashMap.java:828)
	at edu.ualberta.cs.papersdb.server.dao.hibernate.AuthorDAOHibernateImpl.getByFamilyName(AuthorDAOHibernateImpl.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:319)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:155)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy54.getByFamilyName(Unknown Source)
	at edu.ualberta.cs.papersdb.server.dao.hibernate.TestAuthor.getByFamilyNames(TestAuthor.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:47)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
</error>
    <system-out>21:04:52,864 DEBUG GenericHibernateDAO:84 - save: Author
21:04:52,865 DEBUG PaperDAOHibernateImpl:33 - getByFamilyName: getByFamilyNames-109364648
21:04:52,865 DEBUG GenericHibernateDAO:68 - getByExample: Author
21:04:52,866 DEBUG SQL:104 - insert into AUTHOR (VERSION, EMAIL, FAMILY_NAMES, GIVEN_NAMES, TITLE, ID) values (?, ?, ?, ?, ?, ?)
21:04:52,867 DEBUG SQL:104 - select this_.ID as ID3_0_, this_.VERSION as VERSION3_0_, this_.EMAIL as EMAIL3_0_, this_.FAMILY_NAMES as FAMILY4_3_0_, this_.GIVEN_NAMES as GIVEN5_3_0_, this_.TITLE as TITLE3_0_ from AUTHOR this_ where (this_.FAMILY_NAMES=?)
21:04:52,868 DEBUG PaperDAOHibernateImpl:33 - getByFamilyName: 1027147994359013357165409800592217575532
21:04:52,868 DEBUG GenericHibernateDAO:68 - getByExample: Author
21:04:52,868 DEBUG SQL:104 - select this_.ID as ID3_0_, this_.VERSION as VERSION3_0_, this_.EMAIL as EMAIL3_0_, this_.FAMILY_NAMES as FAMILY4_3_0_, this_.GIVEN_NAMES as GIVEN5_3_0_, this_.TITLE as TITLE3_0_ from AUTHOR this_ where (this_.FAMILY_NAMES=?)
</system-out>
  </testcase>
  <testcase time="0.051" classname="edu.ualberta.cs.papersdb.server.dao.hibernate.TestAuthor" name="getMatchingFamilyName"/>
  <testcase time="0.051" classname="edu.ualberta.cs.papersdb.server.dao.hibernate.TestAuthor" name="getByEmail"/>
</testsuite>